{% extends "base.htm" %}

{% block nav%}
{% endblock %}

{% block header %}
<h1>Where is everyone?</h1>
{% endblock %}


{% block head %}
<style>
	#map_canvas { height: 300px; width:100%; }

	.map_info_who { font-weight:bold}
	.map_info_place_name { text-decoration:italic}
	.map_info_addressP{ font-size:5px	}
</style>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
<script type="text/javascript" src="http://code.google.com/apis/gears/gears_init.js"></script>
<script type="text/javascript" src="/JS/search_map.js"></script>

<script type="text/javascript">

var count = 1;

function createEventMarker( lat, lng, message  )
{
	var spot = new google.maps.LatLng( lat, lng );
    var marker = new google.maps.Marker({
            map: map,
            position: spot,
			zIndex: 1
    });

    markersList.push({marker:marker});
    google.maps.event.addListener(marker, 'click', function( marker ) {
        infowindow.setContent( message );
        infowindow.open(map, this);
    });
	console.log( "creating marker!");
	return marker;	
}

// This function tries to find everyone on the current map
// and places them on the map
function findItems(){
	console.log( "looking for items around");
	setStatus( "working", "Working...", "findItems", function(){

	var bounds = map.getBounds();
	// Make the AJAX call to get the items within bounds
	$.ajax( {
				url: "/get_items?bounds=" + bounds.toUrlValue(10) + '&json=1', 
				dataType: 'json',
				error: function(jqXHR, textStatus, errorThrown){
						setStatus( "error", "There was an error: " + jqXHR + ", " + textStatus + ", "+ errorThrown, "findItems" );
					},
				success: function( items_json ){
					//$("#received").html( "he: " + items_json );
					clearMarkerList();
					var locations = eval( items_json );
					
					for( var loc in locations ){
						
						var coordinates = loc.split( "|");
						var items = locations[loc];
						person_str = ( items.length == 1 )  ? "person" : "people";
						createEventMarker( coordinates[0], coordinates[1], 
								"<div class='map_info_who'>" + items.length + " " + person_str + " hanging out at </div>" +
								"<div class='map_info_place_name'><a href='/place/" + items[0].where_loc_lat + "/" + items[0].where_loc_lng + "/" + items[0].place_name + "'>" + items[0].place_name + "</a></div>" + 
								"<div class='map_info_address'>" + items[0].where_addr + "</div>");
					} 
					setStatus( "success", "Search Completed", "findItems" );
				} 
			});
	} );
	return true;
}

// Finds the address and deploys the pin around that location.
function browseSearch()
{
	var sTxt = $("#where").val();
	centerOnAddress( sTxt, findItems );
}

// Finds my location, then finds all people who are hanging out here.
function findMeForBrowseAll()
{
	findMeFnc( findItems );	
}


$(function () {
	
	// init_btn_act - used to be
    $("#searchBtn").click( function () {
        browseSearch();
    });
	$("#where").keydown( function(event){
		if (event.keyCode == '13') {
			browseSearch();
		}
	});
	
	$("#nav_browse").addClass( "active" );

	init_map_stuff();
	findMeForBrowseAll();
	
	// Need to call listener because that is when the bounds actually change
	// Not using bounds_changed because http://stackoverflow.com/questions/4338490/google-map-event-bounds-changed-triggered-multiple-times-when-dragging
	google.maps.event.addListener(map, 'dragend', findItems );
	google.maps.event.addListener(map, 'zoom_changed', findItems );

});

</script>
{% endblock %}

{% block main %}
<div id="received" ></div>
<div class="find_step" >
    <input type="text" id="where" name="where" placeholder="Click to search for an address or a place..." />
	<button class="btn" name="searchBtn" id="searchBtn" value="Search">Search</button>
	<button class='btn' name='findMeBtn' id='findMeBtn' value='Find Me' onclick='findMeForBrowseAll()'>Find Me Again!</button>
	<button class="btn" name="" id="" value="Test" onclick="setStatus('working', 'test')">Test</button>
</div>

<div id="map_canvas" ></div>

    {% for event in events %}
		{% include "event_snip.htm" %}
    {% endfor %}
    Display map
    <a href='/home'>Back</a>
{% endblock %}

{% block right_col %}
<div id="map_success" class="alert-message hidden success"></div>
<div id="map_working" class="alert-message hidden info"   ></div>
<div id="map_error"   class="alert-message hidden error"  ></div>
{% endblock %}